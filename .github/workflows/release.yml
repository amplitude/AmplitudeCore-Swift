name: Release

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: "Do a dry run to preview instead of a real release"
        required: true
        default: "true"

jobs:
  authorize:
    name: Authorize
    runs-on: macos-14
    steps:
      - name: ${{ github.actor }} permission check to do a release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/collaborators/${{ github.actor }}
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  run-tests:
    name: Run Tests
    uses: ./.github/workflows/unit-test.yml
  
  release:
    name: Release
    needs: [authorize, run-tests]
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # Use a modern version of xcode to compile build tools
        # See https://github.com/swiftlang/swift-package-manager/issues/4651
        # NOTE: if downgrading, you may have to manually delete the actions cache via the github interface
      - name: Set Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_16.2.app

      - name: Checkout swift-create-xcframework
        uses: actions/checkout@v4
        with:
          repository: segment-integrations/swift-create-xcframework
          path: swift-create-xcframework

      - name: Compute custom cache key
        id: compute-cache-key
        run: echo "cache_key=$(xcodebuild -version | head -n 1 | tr -d ' ')-$(git -C swift-create-xcframework rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Restore swift-create-xcframework Build cache
        uses: actions/cache@v4
        with:
          path: swift-create-xcframework/.build
          key: ${{ runner.os }}-build-${{ steps.compute-cache-key.outputs.cache_key }}

      - name: Build swift-create-xcframework
        run: make -C swift-create-xcframework swift-create-xcframework

      - name: Set Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_15.2.app

      - name: Build Framework
        run: swift-create-xcframework/.build/release/swift-create-xcframework AmplitudeCore --skip-binary-targets --no-debug-symbols --stack-evolution --zip

      - name: Update Checksum
        run: |
          CHECKSUM=$(xcrun swift package compute-checksum AmplitudeCore.zip) && \
          sed -i '' -E "s/(checksum: \")[^\"]*(\")/\1$CHECKSUM\2/" Package.swift && \
          sed -i '' -E "s/(checksum: \")[^\"]*(\")/\1$CHECKSUM\2/" Package@swift-5.9.swift

      - name: Semantic Release --dry-run
        if: ${{ github.event.inputs.dryRun == 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
          GIT_AUTHOR_NAME: amplitude-sdk-bot
          GIT_AUTHOR_EMAIL: amplitude-sdk-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: amplitude-sdk-bot
          GIT_COMMITTER_EMAIL: amplitude-sdk-bot@users.noreply.github.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @google/semantic-release-replace-plugin@1.2.0 \
          -p @semantic-release/exec@5 \
          semantic-release --dry-run

      - name: Semantic Release
        if: ${{ github.event.inputs.dryRun == 'false'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
          GIT_AUTHOR_NAME: amplitude-sdk-bot
          GIT_AUTHOR_EMAIL: amplitude-sdk-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: amplitude-sdk-bot
          GIT_COMMITTER_EMAIL: amplitude-sdk-bot@users.noreply.github.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @google/semantic-release-replace-plugin@1.2.0 \
          -p @semantic-release/exec@5 \
          semantic-release
